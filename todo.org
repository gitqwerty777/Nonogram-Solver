schedule 10/15~11/21



* 6. After TAAI
** 交大論文1: An efficient algorithm for solving nonograms
** 交大論文2: An Efficient Approach to Solving Nonograms
** use bitset instead int...
** use better procedure

* DONE 1. implementation
** DONE make independent scanner
*** DONE make scanner interface 10/21
CLOSED: [2015-10-20 二 19:54]
*** DONE test by original data 10/22
CLOSED: [2015-10-20 二 19:54]
** DONE make independent printer
*** DONE make printer interface 10/28
CLOSED: [2015-10-20 二 19:54]
*** DONE test by original data 10/29
CLOSED: [2015-10-20 二 19:54]
* 2. test
** TODO test correctness
*** ONGOING if there's wrong problem, record and analyze 11/5
** TODO test speed
*** ONGOING calculate worse case and record it 11/5
* 3. optimization 
** ONGOING refact 10/15~10/30(simple), 11/5~11/21(combine 2., 3.)
*** DONE O3 warnings
CLOSED: [2015-10-25 日 11:49]
*** TODO seperate heuristic and board
** ONGOING optimize heuristic 11/5~11/21
** ONGOING optimize dfs 11/5~11/21
*** DONE use row and col to fill
CLOSED: [2015-10-25 日 11:49]
* 4. analyze
** ONGOING 1. nonogram papaers 10/15~10/30
* 5. misc
** TODO check how to use makefile implicit and some techiniques

* record
==23312== Conditional jump or move depends on uninitialised value(s)
==23312==    at 0x804FA8F: Board::init(int, int, std::vector<std::vector<RowLimit, std::allocator<RowLimit> >, std::allocator<std::vector<RowLimit, std::allocator<RowLimit> > > >, std::vector<std::vector<ColLimit, std::allocator<ColLimit> >, std::allocator<std::vector<ColLimit, std::allocator<ColLimit> > > >, char*, int) (board.h:100)
==23312==    by 0x80492F2: main (nonogramReader.h:48)
==23312== 

fix updatelimitbylimit_col bug
|       | 15x15 | 25x25                     |
|-------+-------+---------------------------|
|     1 |       | 90.08(row) stuck(row+col) |
|     2 |       | 0(row) 2.3(row+col)       |
| 1~100 |  0.62 |                           |
| 1~200 |  2.54 |                           |
| 1~290 |  17.6 |                           |
|  1000 | 13.72 |                           |
need to find why 25x25 would stuck(it's fine if only use row dfs)

add col dfs
|       | 15x15 | 25x25 |
|-------+-------+-------|
|     1 |       | stuck |
|     2 |       | stuck |
| 1~100 |  1.66 |       |
| 1~200 |  6.96 |       |
| 1~290 | 41.16 |       |
|  1000 | 38.32 |       |
maybe doheuin... is too slow and backup cost is high

v1.0
Thu Oct 22 11:51:26 2015 +0800
|       | 15x15 | 25x25 |
|-------+-------+-------|
|     1 |       | 771   |
|     2 |       | stuck |
| 1~100 |  4.85 |       |
| 1~200 | 18.26 |       |
| 1~290 | 73.04 |       |
|  1000 | 21.17 |       |

commit 9c9165c48
Wed Oct 21 16:58:14 2015 +0800
|       |        15x15 | 25x25 |
|-------+--------------+-------|
|     1 |              | stuck |
|     2 |              | stuck |
| 1~100 |         4.85 |       |
| 1~200 |        18.26 |       |
| 1~300 | stuck in 275 |       |
|  1000 |        stuck |       |
